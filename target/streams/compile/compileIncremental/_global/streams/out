[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 415 products, 37 sources, 6 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/hw/spinal/dandriscv/super_scalar/IssueQueue.scala, ${BASE}/hw/spinal/dandriscv/ip/ICache.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/LsuPlugin.scala, ${BASE}/hw/spinal/dandriscv/ip/DCache.scala, ${BASE}/hw/spinal/dandriscv/plugin/Plugin.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/ControlPlugin.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/FetchPlugin.scala, ${BASE}/hw/spinal/dandriscv/gensoc/GenDandSocSimple.scala, ${BASE}/hw/spinal/dandriscv/gencpu/GenSmallest.scala, ${BASE}/hw/spinal/dandriscv/Riscv.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Decode.scala, ${BASE}/hw/spinal/dandriscv/Services.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/ICache.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/AluPlugin.scala, ${BASE}/hw/spinal/dandriscv/ip/ApbTimer.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Mult.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Alu.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/DCachePlugin.scala, ${BASE}/hw/spinal/dandriscv/gencpu/GenSimple.scala, ${BASE}/hw/spinal/dandriscv/ip/Predictor.scala, ${BASE}/hw/spinal/dandriscv/DandRiscvCpu.scala, ${BASE}/hw/spinal/dandriscv/Stage.scala, ${BASE}/hw/spinal/dandriscv/gencpu/GenSimpleForYsyx3rd.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/ExcepPlugin.scala, ${BASE}/hw/spinal/sim/Config.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/DecodePlugin.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Interfaces.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/ICachePlugin.scala, ${BASE}/hw/spinal/sim/SimICache.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Config.scala, ${BASE}/hw/spinal/dandriscv/plugin_simple/BPUPlugin.scala, ${BASE}/hw/spinal/dandriscv/ip/Uart.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Div.scala, ${BASE}/hw/spinal/dandriscv/Pipeline.scala, ${BASE}/hw/spinal/dandriscv/ip/SramBanks.scala, ${BASE}/hw/spinal/dandriscv/DandRiscvSimple.scala, ${BASE}/hw/spinal/dandriscv/ip/FIFO.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/ReorderBuffer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/hw/spinal/dandriscv/super_scalar/Decode.scala), removed = Set(), changed = Set(${BASE}/hw/spinal/dandriscv/super_scalar/ReorderBuffer.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Alu.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Config.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/hw/spinal/dandriscv/super_scalar/Decode.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/hw/spinal/dandriscv/super_scalar/ReorderBuffer.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Alu.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Config.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(dandriscv.super_scalar.LsuMicroOp, dandriscv.super_scalar.CpuConfig, dandriscv.super_scalar.Alu, dandriscv.super_scalar.Alu_module, dandriscv.super_scalar.IssueQueueConfig, dandriscv.super_scalar.ExceptionEnum, dandriscv.super_scalar.GenConfig, dandriscv.super_scalar.RobMicroOp, dandriscv.super_scalar.ReorderBufferConfig, dandriscv.super_scalar.GenROB, dandriscv.super_scalar.MyUtils, dandriscv.super_scalar.ICacheConfig, dandriscv.super_scalar.BjuMicroOp, dandriscv.super_scalar.ReorderBuffer, dandriscv.super_scalar.GenALU, dandriscv.super_scalar.ROBStateEnum, dandriscv.super_scalar.AluMicroOp, dandriscv.super_scalar.ExpMicroOp)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(dandriscv.super_scalar.LsuMicroOp, dandriscv.super_scalar.CpuConfig, dandriscv.super_scalar.Alu, dandriscv.super_scalar.Alu_module, dandriscv.super_scalar.IssueQueueConfig, dandriscv.super_scalar.ExceptionEnum, dandriscv.super_scalar.GenConfig, dandriscv.super_scalar.RobMicroOp, dandriscv.super_scalar.ReorderBufferConfig, dandriscv.super_scalar.GenROB, dandriscv.super_scalar.MyUtils, dandriscv.super_scalar.ICacheConfig, dandriscv.super_scalar.BjuMicroOp, dandriscv.super_scalar.ReorderBuffer, dandriscv.super_scalar.GenALU, dandriscv.super_scalar.ROBStateEnum, dandriscv.super_scalar.AluMicroOp, dandriscv.super_scalar.ExpMicroOp)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/hw/spinal/dandriscv/super_scalar/Decode.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/ReorderBuffer.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Alu.scala, ${BASE}/hw/spinal/dandriscv/super_scalar/Config.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: dandriscv.super_scalar.LsuMicroOp, dandriscv.super_scalar.CpuConfig, dandriscv.super_scalar.Alu, dandriscv.super_scalar.Alu_module, dandriscv.super_scalar.IssueQueueConfig, dandriscv.super_scalar.ExceptionEnum, dandriscv.super_scalar.GenConfig, dandriscv.super_scalar.RobMicroOp, dandriscv.super_scalar.ReorderBufferConfig, dandriscv.super_scalar.GenROB, dandriscv.super_scalar.MyUtils, dandriscv.super_scalar.ICacheConfig, dandriscv.super_scalar.BjuMicroOp, dandriscv.super_scalar.ReorderBuffer, dandriscv.super_scalar.GenALU, dandriscv.super_scalar.ROBStateEnum, dandriscv.super_scalar.AluMicroOp, dandriscv.super_scalar.ExpMicroOp[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 4 Scala sources to D:\MyWork\DandRiscvSoC\target\scala-2.13\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.6.0:compile for Scala 2.13.11[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 79da592 for Scala compiler version 2.13.11[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\spinalhdl\spinalhdl-idsl-plugin_2.13\1.8.1\spinalhdl-idsl-plugin_2.13-1.8.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jdk-1.8\jre\lib\resources.jar;C:\Program Files\Java\jdk-1.8\jre\lib\rt.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jsse.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jce.jar;C:\Program Files\Java\jdk-1.8\jre\lib\charsets.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jfr.jar;C:\Program Files\Java\jdk-1.8\jre\classes;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.11\scala-library-2.13.11.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\MyWork\DandRiscvSoC\target\scala-2.13\classes;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\spinalhdl\spinalhdl-core_2.13\1.8.1\spinalhdl-core_2.13-1.8.1.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\spinalhdl\spinalhdl-lib_2.13\1.8.1\spinalhdl-lib_2.13-1.8.1.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\spinalhdl\spinalhdl-idsl-plugin_2.13\1.8.1\spinalhdl-idsl-plugin_2.13-1.8.1.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\spinalhdl\spinalhdl-sim_2.13\1.8.1\spinalhdl-sim_2.13-1.8.1.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.11\scala-reflect-2.13.11.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\scopt\scopt_2.13\4.1.0\scopt_2.13-4.1.0.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\sourcecode_2.13\0.3.0\sourcecode_2.13-0.3.0.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-compiler\2.13.11\scala-compiler-2.13.11.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\spinalhdl\spinalhdl-idsl-payload_2.13\1.8.1\spinalhdl-idsl-payload_2.13-1.8.1.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\net\openhft\affinity\3.23.2\affinity-3.23.2.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\slf4j\slf4j-simple\2.0.5\slf4j-simple-2.0.5.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\oshi\oshi-core\6.4.0\oshi-core-6.4.0.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\io\github\java-diff-utils\java-diff-utils\4.12\java-diff-utils-4.12.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\jline\jline\3.22.0\jline-3.22.0.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\TsinghuaIC\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\net\java\dev\jna\jna-platform\5.12.1\jna-platform-5.12.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dandriscv.super_scalar.Decode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: dandriscv.super_scalar.Decode[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dandriscv.super_scalar.Decode)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dandriscv.super_scalar.Decode,ModifiedNames(changes = UsedName(prePopTasks,[Default]), UsedName(getParentsPath,[Default]), UsedName(parents,[Default]), UsedName(wait,[Default]), UsedName(getGroupedIO,[Default]), UsedName(parent,[Default]), UsedName(rs2_val,[Default]), UsedName(rs1_addr,[Default]), UsedName(traceEnable,[Default]), UsedName(productArity,[Default]), UsedName(postPopEvent,[Default]), UsedName(component,[Default]), UsedName(setNameAsWeak,[Default]), UsedName(getPath$default$1,[Default]), UsedName(productElement,[Default]), UsedName(getTag,[Default]), UsedName(dslBody,[Default]), UsedName(RefOwnerType,[Default]), UsedName(getRtlPath,[Default]), UsedName(getNameElseThrow,[Default]), UsedName(refOwner,[Default]), UsedName(spinalTags,[Default]), UsedName(definitionNameNoMerge,[Default]), UsedName(imm_all,[Default]), UsedName(instr,[Default]), UsedName(rd_wen,[Default]), UsedName(rd_addr,[Default]), UsedName(traceEnable$default$1,[Default]), UsedName(parents$default$1,[Default]), UsedName(pc,[Default]), UsedName(postPushEvent,[Default]), UsedName(valCallbackOn,[Default]), UsedName(productIterator,[Default]), UsedName(addAttribute,[Default]), UsedName(allocateNames,[Default]), UsedName(!=,[Default]), UsedName(valCallbackRec,[Default]), UsedName(synchronized,[Default]), UsedName(setCompositeName,[Default]), UsedName(namePriority,[Default]), UsedName(getComponent,[Default]), UsedName(removeTag,[Default]), UsedName(dandriscv;super_scalar;Decode;init;,[Default]), UsedName(addComment,[Default]), UsedName(parents$default$2,[Default]), UsedName(productElementNames,[Default]), UsedName(eq,[Default]), UsedName(foreachTag,[Default]), UsedName(==,[Default]), UsedName(stub,[Default]), UsedName(finalize,[Default]), UsedName(getScalaLocationShort,[Default]), UsedName(noIoPrefix,[Default]), UsedName(getOrdredNodeIo,[Default]), UsedName(hashCode,[Default]), UsedName(traceDisable,[Default]), UsedName(apply,[Default]), UsedName(setLambdaName,[Default]), UsedName(isWeak,[Default]), UsedName(withHierarchyAutoPull,[Default]), UsedName(userCache,[Default]), UsedName(notify,[Default]), UsedName(hasTag,[Default]), UsedName(withAutoPull,[Default]), UsedName(reflectNames,[Default]), UsedName(level,[Default]), UsedName(isUnnamed,[Default]), UsedName(##,[Default]), UsedName(parentScope,[Default]), UsedName(getPartialName,[Default]), UsedName(withoutKeywords,[Default]), UsedName(getScalaLocationLong,[Default]), UsedName(userParentCalledDef,[Default]), UsedName(getInstanceCounter,[Default]), UsedName(prePopEvent,[Default]), UsedName(getScalaTrace,[Default]), UsedName(setScalaLocated,[Default]), UsedName(withoutReservedKeywords,[Default]), UsedName(walkComponents,[Default]), UsedName(existsTag,[Default]), UsedName(nameableRef,[Default]), UsedName(onBody,[Default]), UsedName(children,[Default]), UsedName(getAllIo,[Default]), UsedName(canEqual,[Default]), UsedName(onEachAttributes,[Default]), UsedName(setFormalTester,[Default]), UsedName(findTag,[Default]), UsedName(setName,[Default]), UsedName(isTopLevel,[Default]), UsedName(setDefinitionName$default$2,[Default]), UsedName(isNamed,[Default]), UsedName(rs2_addr,[Default]), UsedName(unsetName,[Default]), UsedName(foreachReflectableNameables,[Default]), UsedName(getDisplayName,[Default]), UsedName(clockDomain,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getTags,[Default]), UsedName(rework,[Default]), UsedName(pulledDataCache,[Default]), UsedName(getRefOwnersChain,[Default]), UsedName(isOlderThan,[Default]), UsedName(getMode,[Default]), UsedName(addPrePopTask,[Default]), UsedName(removeTags,[Default]), UsedName(instanceAttributes,[Default]), UsedName(isLogicLess,[Default]), UsedName(asInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(getParentsPath$default$1,[Default]), UsedName(isPriorityApplicable,[Default]), UsedName(Decode,[Default]), UsedName(imm,[Default]), UsedName(localNamingScope,[Default]), UsedName(reflectBaseType,[Default]), UsedName(_spinalTags,[Default]), UsedName(name,[Default]), UsedName(toString,[Default]), UsedName(instanceCounter,[Default]), UsedName(addTags,[Default]), UsedName(copy,[Default]), UsedName(scalaTrace,[Default]), UsedName(setRefOwner,[Default]), UsedName(addTag,[Default]), UsedName(definition,[Default]), UsedName(prePop,[Default]), UsedName(isInBlackBoxTree,[Default]), UsedName(isEmptyOfTag,[Default]), UsedName(isCompletelyUnnamed,[Default]), UsedName(equals,[Default]), UsedName(overrideLocalName,[Default]), UsedName(asFormalDut,[Default]), UsedName(withVitalOutputs,[Default]), UsedName(ioSet,[Default]), UsedName(ioPrefixEnable,[Default]), UsedName(getClass,[Default]), UsedName(getName,[Default]), UsedName(globalData,[Default]), UsedName(clone,[Default]), UsedName(scopeProperties,[Default]), UsedName(isFormalTester,[Default]), UsedName(rs1_val,[Default]), UsedName(PrePopTask,[Default]), UsedName(setWeakName,[Default]), UsedName(traceDisable$default$1,[Default]), UsedName($init$,[Default]), UsedName(afterElaboration,[Default]), UsedName(setPartialName,[Default]), UsedName(filterTag,[Default]), UsedName(getPath,[Default]), UsedName(valCallback,[Default]), UsedName(notifyAll,[Default]), UsedName(reflectIo,[Default]), UsedName(withKeywords,[Default]), UsedName(traceEnabled,[Default]), UsedName(definitionName,[Default]), UsedName(ne,[Default]), UsedName(getRtlPath$default$1,[Default]), UsedName(postInitCallback,[Default]), UsedName(setDefinitionName,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The dandriscv.super_scalar.Decode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(prePopTasks,[Default]), UsedName(getParentsPath,[Default]), UsedName(parents,[Default]), UsedName(wait,[Default]), UsedName(getGroupedIO,[Default]), UsedName(parent,[Default]), UsedName(rs2_val,[Default]), UsedName(rs1_addr,[Default]), UsedName(traceEnable,[Default]), UsedName(productArity,[Default]), UsedName(postPopEvent,[Default]), UsedName(component,[Default]), UsedName(setNameAsWeak,[Default]), UsedName(getPath$default$1,[Default]), UsedName(productElement,[Default]), UsedName(getTag,[Default]), UsedName(dslBody,[Default]), UsedName(RefOwnerType,[Default]), UsedName(getRtlPath,[Default]), UsedName(getNameElseThrow,[Default]), UsedName(refOwner,[Default]), UsedName(spinalTags,[Default]), UsedName(definitionNameNoMerge,[Default]), UsedName(imm_all,[Default]), UsedName(instr,[Default]), UsedName(rd_wen,[Default]), UsedName(rd_addr,[Default]), UsedName(traceEnable$default$1,[Default]), UsedName(parents$default$1,[Default]), UsedName(pc,[Default]), UsedName(postPushEvent,[Default]), UsedName(valCallbackOn,[Default]), UsedName(productIterator,[Default]), UsedName(addAttribute,[Default]), UsedName(allocateNames,[Default]), UsedName(!=,[Default]), UsedName(valCallbackRec,[Default]), UsedName(synchronized,[Default]), UsedName(setCompositeName,[Default]), UsedName(namePriority,[Default]), UsedName(getComponent,[Default]), UsedName(removeTag,[Default]), UsedName(dandriscv;super_scalar;Decode;init;,[Default]), UsedName(addComment,[Default]), UsedName(parents$default$2,[Default]), UsedName(productElementNames,[Default]), UsedName(eq,[Default]), UsedName(foreachTag,[Default]), UsedName(==,[Default]), UsedName(stub,[Default]), UsedName(finalize,[Default]), UsedName(getScalaLocationShort,[Default]), UsedName(noIoPrefix,[Default]), UsedName(getOrdredNodeIo,[Default]), UsedName(hashCode,[Default]), UsedName(traceDisable,[Default]), UsedName(apply,[Default]), UsedName(setLambdaName,[Default]), UsedName(isWeak,[Default]), UsedName(withHierarchyAutoPull,[Default]), UsedName(userCache,[Default]), UsedName(notify,[Default]), UsedName(hasTag,[Default]), UsedName(withAutoPull,[Default]), UsedName(reflectNames,[Default]), UsedName(level,[Default]), UsedName(isUnnamed,[Default]), UsedName(##,[Default]), UsedName(parentScope,[Default]), UsedName(getPartialName,[Default]), UsedName(withoutKeywords,[Default]), UsedName(getScalaLocationLong,[Default]), UsedName(userParentCalledDef,[Default]), UsedName(getInstanceCounter,[Default]), UsedName(prePopEvent,[Default]), UsedName(getScalaTrace,[Default]), UsedName(setScalaLocated,[Default]), UsedName(withoutReservedKeywords,[Default]), UsedName(walkComponents,[Default]), UsedName(existsTag,[Default]), UsedName(nameableRef,[Default]), UsedName(onBody,[Default]), UsedName(children,[Default]), UsedName(getAllIo,[Default]), UsedName(canEqual,[Default]), UsedName(onEachAttributes,[Default]), UsedName(setFormalTester,[Default]), UsedName(findTag,[Default]), UsedName(setName,[Default]), UsedName(isTopLevel,[Default]), UsedName(setDefinitionName$default$2,[Default]), UsedName(isNamed,[Default]), UsedName(rs2_addr,[Default]), UsedName(unsetName,[Default]), UsedName(foreachReflectableNameables,[Default]), UsedName(getDisplayName,[Default]), UsedName(clockDomain,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getTags,[Default]), UsedName(rework,[Default]), UsedName(pulledDataCache,[Default]), UsedName(getRefOwnersChain,[Default]), UsedName(isOlderThan,[Default]), UsedName(getMode,[Default]), UsedName(addPrePopTask,[Default]), UsedName(removeTags,[Default]), UsedName(instanceAttributes,[Default]), UsedName(isLogicLess,[Default]), UsedName(asInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(getParentsPath$default$1,[Default]), UsedName(isPriorityApplicable,[Default]), UsedName(Decode,[Default]), UsedName(imm,[Default]), UsedName(localNamingScope,[Default]), UsedName(reflectBaseType,[Default]), UsedName(_spinalTags,[Default]), UsedName(name,[Default]), UsedName(toString,[Default]), UsedName(instanceCounter,[Default]), UsedName(addTags,[Default]), UsedName(copy,[Default]), UsedName(scalaTrace,[Default]), UsedName(setRefOwner,[Default]), UsedName(addTag,[Default]), UsedName(definition,[Default]), UsedName(prePop,[Default]), UsedName(isInBlackBoxTree,[Default]), UsedName(isEmptyOfTag,[Default]), UsedName(isCompletelyUnnamed,[Default]), UsedName(equals,[Default]), UsedName(overrideLocalName,[Default]), UsedName(asFormalDut,[Default]), UsedName(withVitalOutputs,[Default]), UsedName(ioSet,[Default]), UsedName(ioPrefixEnable,[Default]), UsedName(getClass,[Default]), UsedName(getName,[Default]), UsedName(globalData,[Default]), UsedName(clone,[Default]), UsedName(scopeProperties,[Default]), UsedName(isFormalTester,[Default]), UsedName(rs1_val,[Default]), UsedName(PrePopTask,[Default]), UsedName(setWeakName,[Default]), UsedName(traceDisable$default$1,[Default]), UsedName($init$,[Default]), UsedName(afterElaboration,[Default]), UsedName(setPartialName,[Default]), UsedName(filterTag,[Default]), UsedName(getPath,[Default]), UsedName(valCallback,[Default]), UsedName(notifyAll,[Default]), UsedName(reflectIo,[Default]), UsedName(withKeywords,[Default]), UsedName(traceEnabled,[Default]), UsedName(definitionName,[Default]), UsedName(ne,[Default]), UsedName(getRtlPath$default$1,[Default]), UsedName(postInitCallback,[Default]), UsedName(setDefinitionName,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(dandriscv.super_scalar.Decode)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dandriscv.super_scalar.CpuConfig...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: dandriscv.super_scalar.CpuConfig[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dandriscv.super_scalar.CpuConfig)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dandriscv.super_scalar.Decode: [UsedName(PC_WIDTH,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dandriscv.super_scalar.ReorderBuffer: [UsedName(PC_WIDTH,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of dandriscv.super_scalar.Alu. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dandriscv.super_scalar.CpuConfig,ModifiedNames(changes = UsedName(PC_WIDTH,[Default]))) invalidates 3 classes due to The dandriscv.super_scalar.CpuConfig has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(PC_WIDTH,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(dandriscv.super_scalar.CpuConfig)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(dandriscv.super_scalar.Decode, dandriscv.super_scalar.ReorderBuffer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dandriscv.super_scalar.ReorderBufferConfig...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: dandriscv.super_scalar.ReorderBufferConfig[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dandriscv.super_scalar.ReorderBufferConfig)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dandriscv.super_scalar.ReorderBuffer: [UsedName(ReorderBufferConfig,[Default]), UsedName(apply,[Default]), UsedName(PC_WIDTH,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dandriscv.super_scalar.GenROB: [UsedName(ReorderBufferConfig,[Default]), UsedName(apply,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dandriscv.super_scalar.ReorderBufferConfig,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(ReorderBufferConfig,[Default]), UsedName(PC_WIDTH,[Default]), UsedName(apply,[Default]), UsedName(compose,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(dandriscv;super_scalar;ReorderBufferConfig;init;,[Default]), UsedName(andThen,[Default]))) invalidates 3 classes due to The dandriscv.super_scalar.ReorderBufferConfig has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(ReorderBufferConfig,[Default]), UsedName(PC_WIDTH,[Default]), UsedName(apply,[Default]), UsedName(compose,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(dandriscv;super_scalar;ReorderBufferConfig;init;,[Default]), UsedName(andThen,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(dandriscv.super_scalar.ReorderBufferConfig)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(dandriscv.super_scalar.ReorderBuffer, dandriscv.super_scalar.GenROB)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dandriscv.super_scalar.ReorderBuffer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: dandriscv.super_scalar.ReorderBuffer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dandriscv.super_scalar.ReorderBuffer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dandriscv.super_scalar.ReorderBuffer,ModifiedNames(changes = UsedName(isq_issue_bits,[Default]), UsedName(iq_rd_equal,[Default]), UsedName(isq_issue,[Default]), UsedName(isq_issued,[Default]), UsedName(iq_issue,[Default]), UsedName(iq_issue_bits,[Default]), UsedName(entry,[Default]), UsedName(flush,[Default]), UsedName(iq_issued,[Default]), UsedName(entry_flush,[Default]), UsedName(isq_rd_equal,[Default]), UsedName(entry_flush_real,[Default]), UsedName(iq_rob_ptr,[Default]), UsedName(isq_rob_ptr,[Default]))) invalidates 1 classes due to The dandriscv.super_scalar.ReorderBuffer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(isq_issue_bits,[Default]), UsedName(iq_rd_equal,[Default]), UsedName(isq_issue,[Default]), UsedName(isq_issued,[Default]), UsedName(iq_issue,[Default]), UsedName(iq_issue_bits,[Default]), UsedName(entry,[Default]), UsedName(flush,[Default]), UsedName(iq_issued,[Default]), UsedName(entry_flush,[Default]), UsedName(isq_rd_equal,[Default]), UsedName(entry_flush_real,[Default]), UsedName(iq_rob_ptr,[Default]), UsedName(isq_rob_ptr,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(dandriscv.super_scalar.ReorderBuffer)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	dandriscv.super_scalar.GenROB[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: dandriscv.super_scalar.GenROB[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(dandriscv.super_scalar.GenROB)[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.6474396 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
